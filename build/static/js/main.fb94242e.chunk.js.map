{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","Title","text","Button","props","onClick","handleClick","Persons","persons","handleDeletion","map","person","i","name","number","window","confirm","personService","PersonForm","onSubmit","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","errorMessage","setErrorMessage","Date","refresh","setRefresh","useEffect","initialPersons","showMessage","setTimeout","event","preventDefault","nameObject","some","elem","alert","returnedName","concat","console","log","target","updatedPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb94242e.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteid = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteid }\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport personService from './services/persons'\nimport './index.css'\n\n/*\nnpm install axios\nnpm install json-server --save-dev\n\npackage.json:\n{\n  // ... \n  \"scripts\": {\n\t// ... \n    \"server\": \"json-server -p3001 --watch db.json\"  },\n}\n\nnpm run server\nnpm start\n\n(error code ELIFECYCLE -> npm cache clean --force, delete node_modules, package-lock.json and install again with npm install)\n*/\n\nconst Title = ({text}) => <h2>{text}</h2>\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleClick}>\n      {props.text}\n    </button>\n  )\n}\n\nconst Persons = ({persons, handleDeletion}) => {\n  const deleteperson = (id, name) => {\n    if (window.confirm(`Delete '${name}' ?`)) {\n      personService.deleteid(id).then(handleDeletion(name))\n    }\n  }\n\n  return (\n    <>\n    {persons.map((person, i) => \n      <p key={i}>{person.name} {person.number} \n        <Button handleClick={() => deleteperson(person.id, person.name)} text='delete'/>\n      </p>)\n    }\n   </>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n    <div>\n      name: <input value={props.newName} onChange={props.handleNameChange} />\n    </div>\n    <div>\n      number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n    </form>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ refresh, setRefresh] = useState(new Date())\n\n  useEffect(() => {    \n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [refresh])\n  \n  const showMessage = (message) => {\n    setErrorMessage(message)        \n    setTimeout(() => {setErrorMessage(null)}, 5000)\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = { name: newName, number: newNumber }\n  \n    if (persons.some(elem => elem.name === newName)) {\n      alert(`${newName} is already added to phonebook`)\n    }\n    else {\n      personService\n      .create(nameObject)\n      .then(returnedName => {\n        setPersons(persons.concat(returnedName))\n        showMessage(`${newName} added`)\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => { \n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => { \n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleDeletion = (name) => {\n    personService\n    .getAll()\n    .then(updatedPersons => {\n      setPersons(updatedPersons)\n      setRefresh(new Date())\n    })\n    showMessage(`${name} deleted`)\n  }\n\n  return (\n    <div>\n      <Title text=\"Phonebook\" />\n      <Notification message={errorMessage} />\n      <PersonForm \n        onSubmit={addName} \n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <Title text=\"Numbers\" />\n      <Persons persons={persons} handleDeletion={handleDeletion} />\n    </div>\n  )\n\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}